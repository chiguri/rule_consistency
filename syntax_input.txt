入力の書式

NameChars = [a-z][a-z0-9_]*
   （一文字目は小文字のアルファベットで二文字目以降は小文字のアルファベットかアンダースコアか数字、これ以外でも動くかもしれないけれど保証はしない※）

Inputでは*を「改行で区切った列」の意味とする。他では「区切れるように記述された項の並び」を意味する。
最初二文字が//である場合や最初の一文字が%である場合はコメント行とみなす。また、"["から始まる場合、その行で入力種類の区切り（文法における/がこれ）とみなす。（したがって空行はいくら入っても良い。無視するから。）

Input ::= / Def* / Def* / Rule* / Def* / Rule* / Rule* /
順に「性質の定義」「分類の定義」「分別ルール群」「不正な入力」「正当とみなす入力の列」（入力制約に注意：不正な入力を入れるわけではなく、入力として満たすべき性質が書かれている）「対応の一部」

Def ::= NameChars*

Rule ::= Fml "-->" Fml

Fml ::= "and" "(" Fml* ")"  |  "or" "(" Fml* ")"  |  "-" Fml  |  "(" Fml ")"  |  NameChars



※挙動上、NameCharsは空白文字や丸括弧、角括弧、ハイフン、カンマ、ピリオド、大なり（-->の形）を除く、任意の文字列を許している。Prologにいれたらダメな文字（例えばダブルクオートなど）でも読めるので、変なことはしないこと。ほしければあとで変なのは排除するけれど。



ちょっと入力処理頑張って、Prologに出したファイルがほぼそのまま読めるようにしました。してどうするの、というのはともかく。ほぼ隠しコマンドみたいなもの。
negが使えたり、行の最初以外、任意の場所で[ ]を入れられたり（完全無視するので対応している必要すらない）、ピリオドやカンマが使えたり（無視する）する。
%%で始まる行は、%%が無視される。
%で始まる行はPrologのソースコードに埋め込まれる
//は無視。（%%の直後でも可。つまり%%//と書くと、このシステムでもPrologでも無視されるコメントになる）
